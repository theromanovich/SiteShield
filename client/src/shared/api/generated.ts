/**
 * Generated by orval v6.21.0 üç∫
 * Do not edit manually.
 * Block list
 * OpenAPI spec version: 1.0.0
 */
import * as axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
export type BlockListControllerGetLstParams = {
q?: string;
};

export type AddBlockItemDtoType = typeof AddBlockItemDtoType[keyof typeof AddBlockItemDtoType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AddBlockItemDtoType = {
  KeyWord: 'KeyWord',
  Website: 'Website',
} as const;

export interface AddBlockItemDto {
  data: string;
  type: AddBlockItemDtoType;
}

export type BlockItemDtoType = typeof BlockItemDtoType[keyof typeof BlockItemDtoType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const BlockItemDtoType = {
  KeyWord: 'KeyWord',
  Website: 'Website',
} as const;

export interface BlockItemDto {
  blockListId: number;
  createdAt: string;
  data: string;
  id: number;
  type: BlockItemDtoType;
}

export interface BlockListDto {
  id: number;
  items: BlockItemDto[];
  ownerId: number;
}

export interface PatchAccountDto {
  isBlockingEnabled?: boolean;
}

export interface AccoutDto {
  id: number;
  isBlockingEnabled: boolean;
  ownerId: number;
}

export interface GetSessionInfoDto {
  email: string;
  exp: number;
  iat: number;
  id: number;
}

export interface SignInBodyDto {
  email: string;
  password: string;
}

export interface SignUpBodyDto {
  email: string;
  password: string;
}

export interface HelloWorldDto {
  message: string;
}





  export const appControllerGetHello = <TData = AxiosResponse<HelloWorldDto>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/`,options
    );
  }

export const authControllerSignUp = <TData = AxiosResponse<void>>(
    signUpBodyDto: SignUpBodyDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/auth/sign-up`,
      signUpBodyDto,options
    );
  }

export const authControllerSignIn = <TData = AxiosResponse<void>>(
    signInBodyDto: SignInBodyDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/auth/sign-in`,
      signInBodyDto,options
    );
  }

export const authControllerSignOut = <TData = AxiosResponse<void>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/auth/sign-out`,undefined,options
    );
  }

export const authControllerGetSessionInfo = <TData = AxiosResponse<GetSessionInfoDto>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/auth/session`,options
    );
  }

export const accountControllerGetAccount = <TData = AxiosResponse<AccoutDto>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/account`,options
    );
  }

export const accountControllerPatchAccount = <TData = AxiosResponse<AccoutDto>>(
    patchAccountDto: PatchAccountDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.patch(
      `/account`,
      patchAccountDto,options
    );
  }

export const blockListControllerGetLst = <TData = AxiosResponse<BlockListDto>>(
    params?: BlockListControllerGetLstParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/block-list`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

export const blockListControllerAddBlockList = <TData = AxiosResponse<BlockItemDto>>(
    addBlockItemDto: AddBlockItemDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/block-list/item`,
      addBlockItemDto,options
    );
  }

export const blockListControllerRemoveBlockItem = <TData = AxiosResponse<BlockItemDto>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `/block-list/item/${id}`,options
    );
  }

export type AppControllerGetHelloResult = AxiosResponse<HelloWorldDto>
export type AuthControllerSignUpResult = AxiosResponse<void>
export type AuthControllerSignInResult = AxiosResponse<void>
export type AuthControllerSignOutResult = AxiosResponse<void>
export type AuthControllerGetSessionInfoResult = AxiosResponse<GetSessionInfoDto>
export type AccountControllerGetAccountResult = AxiosResponse<AccoutDto>
export type AccountControllerPatchAccountResult = AxiosResponse<AccoutDto>
export type BlockListControllerGetLstResult = AxiosResponse<BlockListDto>
export type BlockListControllerAddBlockListResult = AxiosResponse<BlockItemDto>
export type BlockListControllerRemoveBlockItemResult = AxiosResponse<BlockItemDto>
